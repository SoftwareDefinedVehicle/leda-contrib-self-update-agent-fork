name: Create SUA release assets

on:
# will be triggered by new tag which indicates release
  push:
    tags:
      - "v*.*.*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: sua

jobs:
  build_for_architecture:
    strategy:
      matrix:
        arch: [amd64, arm64]
    runs-on: [ ubuntu-latest ]
    permissions:
      contents: write
      packages: write
      id-token: write
    steps:
    - id: repo_name
      uses: ASzc/change-string-case-action@v1
      with:
        string: ${{ github.repository }}

    - uses: actions/checkout@v2
      with:
        submodules: recursive   

    # Checkout code
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: recursive

    # Find the tag to use for versioning code
    - name: Find latest tag
      uses: oprypin/find-latest-tag@v1
      with:
        repository: ${{ github.repository }}
        releases-only: false
      id: build_tag
    - run: echo "Tag for release = ${{ steps.build_tag.outputs.tag }}"

    # Setup Buildx for multi-arch build
    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

    # Login against a Docker registry
    # https://github.com/docker/login-action
    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build for ${{ matrix.arch }}
      uses: docker/build-push-action@v3.0.0
      with:
        push: false
        context: .
        file: Dockerfile.${{ matrix.arch }}
        platforms: linux/${{ matrix.arch }}
        tags: |
          ${{ env.IMAGE_NAME }}:${{ steps.build_tag.outputs.tag }}
        outputs: |
          type=oci,dest=./${{ env.IMAGE_NAME }}_${{ steps.build_tag.outputs.tag }}_${{ matrix.arch }}.tar

    - name: Upload ${{ matrix.arch }} artifact to workspace
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.IMAGE_NAME }}_${{ steps.build_tag.outputs.tag }}_${{ matrix.arch }}.tar 
        path: ${{github.workspace}}/${{ env.IMAGE_NAME }}_${{ steps.build_tag.outputs.tag }}_${{ matrix.arch }}.tar

    - name: Upload ${{ matrix.arch }} assets to release bundle
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{ env.IMAGE_NAME }}_${{ steps.build_tag.outputs.tag }}_${{ matrix.arch }}.tar

    # https://github.com/docker/build-push-action
    - name: Build and push Docker multiarch image to ghcr.io
      id: build-and-push
      uses: docker/build-push-action@v2
      with:
        push: true
        context: .
        platforms: linux/${{ matrix.arch }}
        file: Dockerfile.${{ matrix.arch }}
        labels: ${{ steps.meta.outputs.labels }}
        tags: |
          ${{ env.REGISTRY }}/${{ steps.repo_name.outputs.lowercase }}/${{ env.IMAGE_NAME }}:${{ steps.build_tag.outputs.tag }}_${{ matrix.arch }}
  build-multi-arch-for-ghcr:
    runs-on: ubuntu-latest
    name: Create multiarch image
    needs: [build_for_architecture]

    steps:
      - id: repo_name
        uses: ASzc/change-string-case-action@v1
        with:
          string: ${{ github.repository }}

      # Find the tag to use for versioning code
      - name: Find latest tag
        uses: oprypin/find-latest-tag@v1
        with:
          repository: ${{ github.repository }}
          releases-only: false
        id: build_tag

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create merged manifest and push
        env:
          REPO: ghcr.io/${{ steps.repo_name.outputs.lowercase }}
        run: |
          docker buildx imagetools create --tag ${{ env.REGISTRY }}/${{ steps.repo_name.outputs.lowercase }}/${{ env.IMAGE_NAME }}:latest --tag ${{ env.REGISTRY }}/${{ steps.repo_name.outputs.lowercase }}/${{ env.IMAGE_NAME }}:${{ steps.build_tag.outputs.tag }} ${{ env.REGISTRY }}/${{ steps.repo_name.outputs.lowercase }}/${{ env.IMAGE_NAME }}:${{ steps.build_tag.outputs.tag }}_arm64  ${{ env.REGISTRY }}/${{ steps.repo_name.outputs.lowercase }}/${{ env.IMAGE_NAME }}:${{ steps.build_tag.outputs.tag }}_amd64
