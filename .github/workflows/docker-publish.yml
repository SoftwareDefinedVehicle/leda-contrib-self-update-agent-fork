name: Build and Push SUA docker image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: sua

jobs:
  build_for_architecture:
    strategy:
      matrix:
        architecture: [ arm64, amd64 ]
    
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - id: repo_name
        uses: ASzc/change-string-case-action@v1
        with:
          string: ${{ github.repository }}

      - name: Find latest tag
        uses: oprypin/find-latest-tag@v1
        with:
          repository: ${{ github.repository }}
          releases-only: false
        id: build_tag

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # https://github.com/docker/build-push-action
      - name: Build and push Docker image to ghcr.io
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          push: true
          context: .
          platforms: linux/${{ matrix.architecture }}
          file: Dockerfile.${{ matrix.architecture }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: |
            ${{ env.REGISTRY }}/${{ steps.repo_name.outputs.lowercase }}/${{ env.IMAGE_NAME }}:testing_${{ matrix.architecture}}
            
  create-multiarch-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    name: Create multiarch image
    needs: [build_for_architecture]
    
    steps:
      - id: repo_name
        uses: ASzc/change-string-case-action@v1
        with:
          string: ${{ github.repository }}

      # Find the tag to use for versioning code
      - name: Find latest tag
        uses: oprypin/find-latest-tag@v1
        with:
          repository: ${{ github.repository }}
          releases-only: false
        id: build_tag

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
   
      - name: Create merged manifest and push
        env:
          REPO: ghcr.io/${{ steps.repo_name.outputs.lowercase }}
        run: |
          docker buildx imagetools create -t  ${{ env.REGISTRY }}/${{ steps.repo_name.outputs.lowercase }}/${{ env.IMAGE_NAME }}:testing ${{ env.REGISTRY }}/${{ steps.repo_name.outputs.lowercase }}/${{ env.IMAGE_NAME }}:testing_arm64  ${{ env.REGISTRY }}/${{ steps.repo_name.outputs.lowercase }}/${{ env.IMAGE_NAME }}:testing_amd64
  
