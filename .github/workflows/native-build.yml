name: Native build

on:
  push:
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Release

jobs:
  build_for_architecture:
    strategy:
      matrix:
        arch: [ amd64, arm64 ]
    runs-on: [ ubuntu-latest ]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    # Remove apt repos that are known to break from time to time 
    - name: Remove broken apt repos [Ubuntu]
      run: |
        for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done

    - name: Install tools
      run: |
        sudo apt-get install apt-transport-https --yes
        sudo apt-get -y update
        sudo apt-get -y upgrade
        sudo apt-get -y install autoconf binutils cmake file \
        gcc g++ git libtool make \
        build-essential libcurl4-openssl-dev \
        binutils-aarch64-linux-gnu gcc-9-aarch64-linux-gnu g++-9-aarch64-linux-gnu \
        python3 python3-pip python3-setuptools python3-wheel ninja-build python3-pip \
        libselinux1-dev libmount-dev libmount1 libblkid-dev
        pip3 install meson

    - name: Build for ${{ matrix.arch }}
      run: |
        mkdir build_${{ matrix.arch }} 
        ./scripts/build_openssl_${{ matrix.arch }}.sh
        ./scripts/build_glib_${{ matrix.arch }}.sh
        cd build_${{ matrix.arch }}
        cmake -DCMAKE_INSTALL_PREFIX=../dist_${{ matrix.arch }} -DCMAKE_TOOLCHAIN_FILE=../cmake/linux/${{ matrix.arch }}/toolchain.cmake -DOPENSSL_ROOT_DIR=../build_${{ matrix.arch }} -DOPENSSL_CRYPTO_LIBRARY=../build_${{ matrix.arch }}/lib/libcrypto.so ..
        make
        make install

    - name: Run unit tests
      if: ${{ matrix.arch=='amd64' }}
      run: |
        cd dist_${{ matrix.arch }}/utest
        ./TestSDVSelfUpdateAgent

    - name: Compress artifacts
      run: tar -cvf sua_${{ matrix.arch }}.tar.gz --exclude=lib/cmake --exclude=lib/pkgconfig -C dist_${{ matrix.arch }} bin/sdv-self-update-agent lib

    - name: Upload ${{ matrix.arch }} artifact to workspace
      uses: actions/upload-artifact@v3
      with:
        name: sua_${{ matrix.arch }}.tar.gz
        path: sua_${{ matrix.arch }}.tar.gz

  prerelease:
    name: Upload artifacts
    needs: [build_for_architecture]
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2

      - name: Upload artifacts to build results
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: true
          automatic_release_tag: build_${{ github.run_number }}
          title: "Build ${{ github.run_number }}"
          files: "**/sua_*.tar.gz"

